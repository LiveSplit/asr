name: Build

on:
  pull_request:
  push:
    branches:
      - 'master'
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [wasm32-unknown-unknown, wasm32-wasip1]
        toolchain: [stable, nightly]
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v4

      - name: Install Rust
        uses: hecrj/setup-rust-action@v2
        with:
          targets: ${{ matrix.target }}
          rust-version: ${{ matrix.toolchain }}

      - name: Build (No Default Features)
        run: |
          cargo build --no-default-features --target ${{ matrix.target }}

      - name: Build (Default Features)
        run: |
          cargo build --target ${{ matrix.target }}

      - name: Build (All Features)
        run: |
          cargo build --all-features --target ${{ matrix.target }}

  test:
    name: Test (Host)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v4

      - name: Install Rust
        uses: hecrj/setup-rust-action@v2

      - name: Test (All Features)
        run: |
          cargo test --all-features

  clippy:
    name: Check clippy lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v4

      - name: Install Rust
        uses: hecrj/setup-rust-action@v2
        with:
          components: clippy

      - name: Run Clippy
        run: cargo clippy --all-features

  format:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v4

      - name: Install Rust
        uses: hecrj/setup-rust-action@v2
        with:
          components: rustfmt

      - name: Run cargo fmt
        run: cargo fmt -- --check || true
